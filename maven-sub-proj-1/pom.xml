<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- 声明父工程的坐标 -->
    <parent>
        <groupId>com.example.web</groupId>
        <artifactId>maven-parent</artifactId>
        <version>1.0-SNAPSHOT</version>
        <!--
            配置父容器的路径
            1. <relativePath> 默认值为 ../pom.xml，即默认从当前子模块的上级目录查找;
            2. 若父 pom 不在默认路径，则需要显式声明 父 pom 路径 (例如当前配置 ../maven-parent/pom.xml)
            3. 若父 pom 已存在于仓库中 (例如公司私服)，可以省略 <relativePath>
        -->
        <relativePath>../maven-parent/pom.xml</relativePath>
    </parent>

    <!-- 子工程的 groupId 和 version 和父工程保持一致，因此只需要声明 artifactId -->
    <artifactId>maven-sub-proj-1</artifactId>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!--
            父工程的 dependencyManagement 标签中已经声明了
             spring-context 依赖信息，
             1. 子工程中使用相同以来版本时，无需填写 version 标签
             2. 子工程使用其他版本依赖时，需要手动声明 version 标签
        -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>6.1.14</version>
        </dependency>
    </dependencies>

</project>